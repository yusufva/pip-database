// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model student {
  id                  Int                @unique @default(autoincrement())
  nisn                String             @db.VarChar(11)
  fase                String
  nama                String
  sekolah             String
  provinsiSekolah     String
  kotaSekolah         String
  kecamatanSekolah    String
  nik                 String?            @db.VarChar(17)
  npsn                String?            @db.VarChar(9)
  kelas               Int
  rombel              String
  semester            String             @default("")
  jenjang             String             @db.VarChar(5)
  bentuk              String
  kelamin             String             @db.VarChar(1)
  tempatLahir         String
  tanggalLahir        DateTime
  nominal             Int?
  tipeSk              String?
  skNominasi          String?
  tanggalSkNominasi   DateTime?
  tahapNominasi       Int?
  vaNominasi          String?
  noRek               String?
  bank                String?            @db.VarChar(10)
  layakPip            Boolean?
  keteranganTahap     String?
  keteranganPencairan String?
  keteranganTambahan  String?
  status              String?            @db.VarChar(25)
  koordinator         String
  aspirator           String
  pic                 String?
  family              familyOnStudents[]
  created_at          DateTime           @default(now())
  updated_at          DateTime           @default(now())

  @@id([nisn, fase])
}

model familyMember {
  nik       String             @db.VarChar(17)
  nama      String
  statusId  Int
  status    familyStatus       @relation(fields: [statusId], references: [id], onDelete: Cascade)
  ttl       DateTime?
  provinsi  String             @default("")
  kota      String             @default("")
  kecamatan String             @default("")
  kelurahan String             @default("")
  kodepos   String             @default("")
  alamat    String             @default("")
  hp        String?            @default("")
  student   familyOnStudents[]

  @@id([nik])
}

model familyStatus {
  id     Int            @id @default(autoincrement())
  status String         @db.VarChar(5)
  family familyMember[]
}

model familyOnStudents {
  studentFase      String
  studentNisn      String        @db.VarChar(11)
  studentInfo      student?      @relation(fields: [studentNisn, studentFase], references: [nisn, fase], onDelete: Cascade)
  familyMemberNik  String        @db.VarChar(17)
  familyMemberInfo familyMember? @relation(fields: [familyMemberNik], references: [nik], onDelete: Cascade)

  @@id([familyMemberNik, studentFase, studentNisn])
}

model user {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  password      String   @db.Text
  name          String
  role_id       Int
  role          Role     @relation(references: [id], fields: [role_id])
  koordinator   user[]   @relation("AspiratorKoordinator")
  aspiratorId   Int?
  aspirator     user?    @relation("AspiratorKoordinator", fields: [aspiratorId], references: [id])
  refresh_token String?  @db.Text
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Role {
  id        Int    @id @default(autoincrement())
  role_name String
  user      user[]
}
